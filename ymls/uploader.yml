#!/bin/bash
#
# Title:      Jdownloader2 (OAuth security)
# Author(s):  timekills
# URL:        https://github.com/timekills/jdownloader2-for-Plexguide
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'uploader'
        intport: '8080'
        extport: '7777'
        image: 'physk/rclone-mergerfs'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/pgclone/ymls/_core.yml'
    
    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}{{tldset}}{{cname}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'
          traefik.frontend.redirect.entryPoint: 'https'

    - name: 'Setting {{pgrole}} Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}/:/config'
          - '/mnt/unionfs:/unionfs:shared'
          - '/mnt/move:/move:shared'

    - name: 'Setting {{pgrole}} ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'
          TZ: '${TZ}'
          DISABLE_UNIONFS_CHOWN: 'true'
          DISABLE_TDRIVE1: 'true'
          DISABLE_TDRIVE2: 'true'
          DISABLE_GDRIVE: 'true'
          DISABLE_MERGERFS: 'true'

     ########## SERVICE CLONECLEAN ##########

    - name: 'Check Service's Existance'
      stat:
        path: '/etc/systemd/systemd/cloneclean.service'
      register: cxp

    - name: 'Stop service cloneclean'
      service:
        name: cloneclean
        state: stopped
      when: cxp.stat.exists

    - name: 'Install CloceClean Service'
      template:
        src: /opt/pgclone/scripts/cloneclean.service.j2
        dest: /etc/systemd/system/cloneclean.service
        force: yes

    - name: 'Daemon-Reload for cloneclean'
      systemd: state=stopped name=cloneclean daemon_reload=yes enabled=no

    - name: 'Start Service for CloneClean'
      systemd: state=started name=cloneclean enabled=yes

     ########## COPY PART ##########

    - name: 'Check of Existance files in {{ pgrole }}'
      stat:
        path: '/opt/appdata/uploader/rclone.conf'
      register: rcp

    - name: 'Remove old rclone.conf from {{ pgrole }} folder'
      shell: 'rm -rf /opt/appdata/uploader/rclone.conf'
      ignore_errors: yes
      when: rcp.stat.exists

    - name: 'Remove old Keys from {{ pgrole }} folder'
      shell: 'rm -rf /opt/appdata/uploader/keys'
      ignore_errors: yes
      when: rcp.stat.exists

    - name: 'Clone rclone.config in {{ pgrole }} folder' 
      shell: 'cp -r /opt/appdata/plexguide/rclone.conf /opt/appdata/uploader/rclone.conf'

    - name: 'Clone fresh keys for {{ pgrole}}'
      shell: 'cp -rv "/opt/appdata/plexguide/.blitzkeys" /opt/appdata/uploader/keys'

     ########## DEPLOYMENT ##########

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        capabilities:
          - 'SYS_ADMIN'
        privileged: 'true'
        devices:
          - '/dev/fuse'
        privileged: true
        restart_policy: unless-stopped
        security_opts:
          - apparmor:unconfined
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'
